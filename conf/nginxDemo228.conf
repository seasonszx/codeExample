
#user  seasonszx;
worker_processes  1; 


#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    include       mime.types;
    default_type  application/octet-stream;

    charset   utf-8;
 
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on; 
 
    access_log off;

    keepalive_timeout 60;
 
    
    open_file_cache max=204800 inactive=20s;
    open_file_cache_min_uses 1;
    open_file_cache_valid 30s; 

    server {
        listen       80;
        server_name  localhost;
		
		client_max_body_size     1200m; # 修改成自己的想要设置的值

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
         #   root   html;
         #   index  index.html index.htm;
        #}

		location /openresources/ {
			add_header Cache-Control no-cache;
			add_header Access-Control-Allow-Origin *;
			root D:/home/lexun;
        }
		
		location /js{
			root    D:/home/lexun/static;  #显示的根索引目录  
		}
		location /css{
			root    D:/home/lexun/static;  #显示的根索引目录  
		}
		location /image{
			root    D:/home/lexun/static;  #显示的根索引目录  
		}
		location /plugins{
			root    D:/home/lexun/static;  #显示的根索引目录  
		}
		location /fonts{
			root    D:/home/lexun/static;  #显示的根索引目录  
		}
		
		location /jenkins {
	    proxy_pass   http://127.0.0.1:8901;
            index  index.html index.htm;
			#Proxy Settings

			# 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

			proxy_max_temp_file_size 0;
			proxy_connect_timeout      90;		# nginx跟后端服务器连接超时时间(代理连接超时)
			proxy_send_timeout         90;		# 连接成功后，后端服务器发送时间(代理接收超时)
			proxy_read_timeout         90;		# 连接成功后，后端服务器响应时间(代理接收超时)
			proxy_buffer_size          4k;		# 设置代理服务器（nginx）保存用户头信息的缓冲区大小
			proxy_buffers              4 32k;	# proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
			proxy_busy_buffers_size    64k;		# 高负荷下缓冲大小（proxy_buffers*2）
			proxy_temp_file_write_size 64k;		# 设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
		
		location /oep {
	    proxy_pass   http://127.0.0.1:8001;
            index  index.html index.htm;
			#Proxy Settings

			# 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

			proxy_max_temp_file_size 0;
			proxy_connect_timeout      90;		# nginx跟后端服务器连接超时时间(代理连接超时)
			proxy_send_timeout         90;		# 连接成功后，后端服务器发送时间(代理接收超时)
			proxy_read_timeout         90;		# 连接成功后，后端服务器响应时间(代理接收超时)
			proxy_buffer_size          4k;		# 设置代理服务器（nginx）保存用户头信息的缓冲区大小
			proxy_buffers              4 32k;	# proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
			proxy_busy_buffers_size    64k;		# 高负荷下缓冲大小（proxy_buffers*2）
			proxy_temp_file_write_size 64k;		# 设定缓存文件夹大小，大于这个值，将从upstream服务器传

        }
		
		location /lx-quartz {
	    proxy_pass   http://127.0.0.1:8001;
            index  index.html index.htm;
			#Proxy Settings

			# 后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_redirect     off;
			proxy_set_header   Host             $host;
			proxy_set_header   X-Real-IP        $remote_addr;
			proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

			proxy_max_temp_file_size 0;
			proxy_connect_timeout      90;		# nginx跟后端服务器连接超时时间(代理连接超时)
			proxy_send_timeout         90;		# 连接成功后，后端服务器发送时间(代理接收超时)
			proxy_read_timeout         90;		# 连接成功后，后端服务器响应时间(代理接收超时)
			proxy_buffer_size          4k;		# 设置代理服务器（nginx）保存用户头信息的缓冲区大小
			proxy_buffers              4 32k;	# proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
			proxy_busy_buffers_size    64k;		# 高负荷下缓冲大小（proxy_buffers*2）
			proxy_temp_file_write_size 64k;		# 设定缓存文件夹大小，大于这个值，将从upstream服务器传

        }
	
    }



    
    

   
}
